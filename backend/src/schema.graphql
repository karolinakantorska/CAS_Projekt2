#import * from './generated/prisma.graphql'

type Query {
  users(where: UserWhereInput): [User!]!
  user(where: UserWhereUniqueInput!): User
  currentUser: User
  days(where: DayWhereInput): [Day]!
  day(where: DayWhereUniqueInput!): Day
  reservations(where: ReservationWhereInput): [Reservation]!
  reservation(where: ReservationWhereUniqueInput!): Reservation
}
type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User

  #updateUser(
  #  id: ID!
  #  email: String #@unique
  #  name: String
  #  surname: String
  #  description: String
  #  photo: String
  #): User!

  deleteUser(id: ID!): User
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMesage
  createDay(data: DayCreateInput!): Day!
  updateDay(data: DayUpdateInput!, where: DayWhereUniqueInput!): Day
  createReservation(data: ReservationCreateInput!): Reservation!
  deleteReservation(id: ID!): Reservation
  deleteManyReservations(where: ReservationWhereInput): BatchPayload!
  updateReservation(data: ReservationUpdateInput!, where: ReservationWhereUniqueInput!): Reservation
}

type SuccessMesage {
  message: String
}
