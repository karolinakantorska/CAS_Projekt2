#import * from './generated/prisma.graphql'

type Query {
  users(where: UserWhereInput): [User!]!
  user(where: UserWhereUniqueInput!): User
  currentUser: User
  days(where: DayWhereInput): [Day]!
  day(where: DayWhereUniqueInput!): Day
  reservations(where: ReservationWhereInput): [Reservation]!
  reservation(where: ReservationWhereUniqueInput!): Reservation
  infoes(
    where: InfoWhereInput
    orderBy: InfoOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Info]!
  trips(
    where: TripWhereInput
    orderBy: TripOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Trip]!
  trip(where: TripWhereUniqueInput!): Trip
}
type Mutation {
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUser(where: UserWhereUniqueInput!): User
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMesage
  createDay(data: DayCreateInput!): Day!
  updateDay(data: DayUpdateInput!, where: DayWhereUniqueInput!): Day
  createReservation(data: ReservationCreateInput!): Reservation!
  deleteReservation(where: ReservationWhereUniqueInput!): Reservation
  deleteManyReservations(where: ReservationWhereInput): BatchPayload!
  updateReservationAddGuide(
    data: ReservationUpdateInput!
    where: ReservationWhereUniqueInput!
  ): Reservation
  updateReservation(data: ReservationUpdateInput!, where: ReservationWhereUniqueInput!): Reservation
  createInfo(data: InfoCreateInput!): Info!
  updateInfo(data: InfoUpdateInput!, where: InfoWhereUniqueInput!): Info
  createTrip(data: TripCreateInput!): Trip!
  updateTrip(data: TripUpdateInput!, where: TripWhereUniqueInput!): Trip
  deleteTrip(where: TripWhereUniqueInput!): Trip
}

type SuccessMesage {
  message: String
}
