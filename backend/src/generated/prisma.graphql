# source: https://eu1.prisma.sh/karolina-kantorska/MTBreservation/dev
# timestamp: Wed Oct 21 2020 09:28:31 GMT+0200 (Central European Summer Time)

type AggregateDay {
  count: Int!
}

type AggregateReservation {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Day implements Node {
  id: ID!
  year: String!
  month: String!
  day: String!
  reservation(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation!]
}

"""A connection to a list of items."""
type DayConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DayEdge]!
  aggregate: AggregateDay!
}

input DayCreateInput {
  id: ID
  year: String!
  month: String!
  day: String!
  reservation: ReservationCreateManyWithoutDayInput
}

input DayCreateOneWithoutReservationInput {
  create: DayCreateWithoutReservationInput
  connect: DayWhereUniqueInput
}

input DayCreateWithoutReservationInput {
  id: ID
  year: String!
  month: String!
  day: String!
}

"""An edge in a connection."""
type DayEdge {
  """The item at the end of the edge."""
  node: Day!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DayOrderByInput {
  id_ASC
  id_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  day_ASC
  day_DESC
}

type DayPreviousValues {
  id: ID!
  year: String!
  month: String!
  day: String!
}

type DaySubscriptionPayload {
  mutation: MutationType!
  node: Day
  updatedFields: [String!]
  previousValues: DayPreviousValues
}

input DaySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DaySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DaySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DaySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DayWhereInput
}

input DayUpdateInput {
  year: String
  month: String
  day: String
  reservation: ReservationUpdateManyWithoutDayInput
}

input DayUpdateManyMutationInput {
  year: String
  month: String
  day: String
}

input DayUpdateOneRequiredWithoutReservationInput {
  create: DayCreateWithoutReservationInput
  connect: DayWhereUniqueInput
  update: DayUpdateWithoutReservationDataInput
  upsert: DayUpsertWithoutReservationInput
}

input DayUpdateWithoutReservationDataInput {
  year: String
  month: String
  day: String
}

input DayUpsertWithoutReservationInput {
  update: DayUpdateWithoutReservationDataInput!
  create: DayCreateWithoutReservationInput!
}

input DayWhereInput {
  """Logical AND on all given filters."""
  AND: [DayWhereInput!]

  """Logical OR on all given filters."""
  OR: [DayWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DayWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  year: String

  """All values that are not equal to given value."""
  year_not: String

  """All values that are contained in given list."""
  year_in: [String!]

  """All values that are not contained in given list."""
  year_not_in: [String!]

  """All values less than the given value."""
  year_lt: String

  """All values less than or equal the given value."""
  year_lte: String

  """All values greater than the given value."""
  year_gt: String

  """All values greater than or equal the given value."""
  year_gte: String

  """All values containing the given string."""
  year_contains: String

  """All values not containing the given string."""
  year_not_contains: String

  """All values starting with the given string."""
  year_starts_with: String

  """All values not starting with the given string."""
  year_not_starts_with: String

  """All values ending with the given string."""
  year_ends_with: String

  """All values not ending with the given string."""
  year_not_ends_with: String
  month: String

  """All values that are not equal to given value."""
  month_not: String

  """All values that are contained in given list."""
  month_in: [String!]

  """All values that are not contained in given list."""
  month_not_in: [String!]

  """All values less than the given value."""
  month_lt: String

  """All values less than or equal the given value."""
  month_lte: String

  """All values greater than the given value."""
  month_gt: String

  """All values greater than or equal the given value."""
  month_gte: String

  """All values containing the given string."""
  month_contains: String

  """All values not containing the given string."""
  month_not_contains: String

  """All values starting with the given string."""
  month_starts_with: String

  """All values not starting with the given string."""
  month_not_starts_with: String

  """All values ending with the given string."""
  month_ends_with: String

  """All values not ending with the given string."""
  month_not_ends_with: String
  day: String

  """All values that are not equal to given value."""
  day_not: String

  """All values that are contained in given list."""
  day_in: [String!]

  """All values that are not contained in given list."""
  day_not_in: [String!]

  """All values less than the given value."""
  day_lt: String

  """All values less than or equal the given value."""
  day_lte: String

  """All values greater than the given value."""
  day_gt: String

  """All values greater than or equal the given value."""
  day_gte: String

  """All values containing the given string."""
  day_contains: String

  """All values not containing the given string."""
  day_not_contains: String

  """All values starting with the given string."""
  day_starts_with: String

  """All values not starting with the given string."""
  day_not_starts_with: String

  """All values ending with the given string."""
  day_ends_with: String

  """All values not ending with the given string."""
  day_not_ends_with: String
  reservation_every: ReservationWhereInput
  reservation_some: ReservationWhereInput
  reservation_none: ReservationWhereInput
}

input DayWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createDay(data: DayCreateInput!): Day!
  createReservation(data: ReservationCreateInput!): Reservation!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateDay(data: DayUpdateInput!, where: DayWhereUniqueInput!): Day
  updateReservation(data: ReservationUpdateInput!, where: ReservationWhereUniqueInput!): Reservation
  deleteUser(where: UserWhereUniqueInput!): User
  deleteDay(where: DayWhereUniqueInput!): Day
  deleteReservation(where: ReservationWhereUniqueInput!): Reservation
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertDay(where: DayWhereUniqueInput!, create: DayCreateInput!, update: DayUpdateInput!): Day!
  upsertReservation(where: ReservationWhereUniqueInput!, create: ReservationCreateInput!, update: ReservationUpdateInput!): Reservation!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyDays(data: DayUpdateManyMutationInput!, where: DayWhereInput): BatchPayload!
  updateManyReservations(data: ReservationUpdateManyMutationInput!, where: ReservationWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyDays(where: DayWhereInput): BatchPayload!
  deleteManyReservations(where: ReservationWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  GUIDE
  USER
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  days(where: DayWhereInput, orderBy: DayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Day]!
  reservations(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation]!
  user(where: UserWhereUniqueInput!): User
  day(where: DayWhereUniqueInput!): Day
  reservation(where: ReservationWhereUniqueInput!): Reservation
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  daysConnection(where: DayWhereInput, orderBy: DayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DayConnection!
  reservationsConnection(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReservationConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Reservation implements Node {
  id: ID!
  time: Time
  guide: User!
  guideID: ID
  day: Day!
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
}

"""A connection to a list of items."""
type ReservationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReservationEdge]!
  aggregate: AggregateReservation!
}

input ReservationCreateInput {
  id: ID
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  guide: UserCreateOneWithoutReservationsInput!
  day: DayCreateOneWithoutReservationInput!
}

input ReservationCreateManyWithoutDayInput {
  create: [ReservationCreateWithoutDayInput!]
  connect: [ReservationWhereUniqueInput!]
}

input ReservationCreateManyWithoutGuideInput {
  create: [ReservationCreateWithoutGuideInput!]
  connect: [ReservationWhereUniqueInput!]
}

input ReservationCreateWithoutDayInput {
  id: ID
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  guide: UserCreateOneWithoutReservationsInput!
}

input ReservationCreateWithoutGuideInput {
  id: ID
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  day: DayCreateOneWithoutReservationInput!
}

"""An edge in a connection."""
type ReservationEdge {
  """The item at the end of the edge."""
  node: Reservation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReservationOrderByInput {
  id_ASC
  id_DESC
  time_ASC
  time_DESC
  guideID_ASC
  guideID_DESC
  userName_ASC
  userName_DESC
  userEmail_ASC
  userEmail_DESC
  nrOfPeople_ASC
  nrOfPeople_DESC
  description_ASC
  description_DESC
}

type ReservationPreviousValues {
  id: ID!
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
}

input ReservationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  time: Time

  """All values that are not equal to given value."""
  time_not: Time

  """All values that are contained in given list."""
  time_in: [Time!]

  """All values that are not contained in given list."""
  time_not_in: [Time!]
  guideID: ID

  """All values that are not equal to given value."""
  guideID_not: ID

  """All values that are contained in given list."""
  guideID_in: [ID!]

  """All values that are not contained in given list."""
  guideID_not_in: [ID!]

  """All values less than the given value."""
  guideID_lt: ID

  """All values less than or equal the given value."""
  guideID_lte: ID

  """All values greater than the given value."""
  guideID_gt: ID

  """All values greater than or equal the given value."""
  guideID_gte: ID

  """All values containing the given string."""
  guideID_contains: ID

  """All values not containing the given string."""
  guideID_not_contains: ID

  """All values starting with the given string."""
  guideID_starts_with: ID

  """All values not starting with the given string."""
  guideID_not_starts_with: ID

  """All values ending with the given string."""
  guideID_ends_with: ID

  """All values not ending with the given string."""
  guideID_not_ends_with: ID
  userName: String

  """All values that are not equal to given value."""
  userName_not: String

  """All values that are contained in given list."""
  userName_in: [String!]

  """All values that are not contained in given list."""
  userName_not_in: [String!]

  """All values less than the given value."""
  userName_lt: String

  """All values less than or equal the given value."""
  userName_lte: String

  """All values greater than the given value."""
  userName_gt: String

  """All values greater than or equal the given value."""
  userName_gte: String

  """All values containing the given string."""
  userName_contains: String

  """All values not containing the given string."""
  userName_not_contains: String

  """All values starting with the given string."""
  userName_starts_with: String

  """All values not starting with the given string."""
  userName_not_starts_with: String

  """All values ending with the given string."""
  userName_ends_with: String

  """All values not ending with the given string."""
  userName_not_ends_with: String
  userEmail: String

  """All values that are not equal to given value."""
  userEmail_not: String

  """All values that are contained in given list."""
  userEmail_in: [String!]

  """All values that are not contained in given list."""
  userEmail_not_in: [String!]

  """All values less than the given value."""
  userEmail_lt: String

  """All values less than or equal the given value."""
  userEmail_lte: String

  """All values greater than the given value."""
  userEmail_gt: String

  """All values greater than or equal the given value."""
  userEmail_gte: String

  """All values containing the given string."""
  userEmail_contains: String

  """All values not containing the given string."""
  userEmail_not_contains: String

  """All values starting with the given string."""
  userEmail_starts_with: String

  """All values not starting with the given string."""
  userEmail_not_starts_with: String

  """All values ending with the given string."""
  userEmail_ends_with: String

  """All values not ending with the given string."""
  userEmail_not_ends_with: String
  nrOfPeople: String

  """All values that are not equal to given value."""
  nrOfPeople_not: String

  """All values that are contained in given list."""
  nrOfPeople_in: [String!]

  """All values that are not contained in given list."""
  nrOfPeople_not_in: [String!]

  """All values less than the given value."""
  nrOfPeople_lt: String

  """All values less than or equal the given value."""
  nrOfPeople_lte: String

  """All values greater than the given value."""
  nrOfPeople_gt: String

  """All values greater than or equal the given value."""
  nrOfPeople_gte: String

  """All values containing the given string."""
  nrOfPeople_contains: String

  """All values not containing the given string."""
  nrOfPeople_not_contains: String

  """All values starting with the given string."""
  nrOfPeople_starts_with: String

  """All values not starting with the given string."""
  nrOfPeople_not_starts_with: String

  """All values ending with the given string."""
  nrOfPeople_ends_with: String

  """All values not ending with the given string."""
  nrOfPeople_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
}

type ReservationSubscriptionPayload {
  mutation: MutationType!
  node: Reservation
  updatedFields: [String!]
  previousValues: ReservationPreviousValues
}

input ReservationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReservationWhereInput
}

input ReservationUpdateInput {
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  guide: UserUpdateOneRequiredWithoutReservationsInput
  day: DayUpdateOneRequiredWithoutReservationInput
}

input ReservationUpdateManyDataInput {
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
}

input ReservationUpdateManyMutationInput {
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
}

input ReservationUpdateManyWithoutDayInput {
  create: [ReservationCreateWithoutDayInput!]
  connect: [ReservationWhereUniqueInput!]
  set: [ReservationWhereUniqueInput!]
  disconnect: [ReservationWhereUniqueInput!]
  delete: [ReservationWhereUniqueInput!]
  update: [ReservationUpdateWithWhereUniqueWithoutDayInput!]
  updateMany: [ReservationUpdateManyWithWhereNestedInput!]
  deleteMany: [ReservationScalarWhereInput!]
  upsert: [ReservationUpsertWithWhereUniqueWithoutDayInput!]
}

input ReservationUpdateManyWithoutGuideInput {
  create: [ReservationCreateWithoutGuideInput!]
  connect: [ReservationWhereUniqueInput!]
  set: [ReservationWhereUniqueInput!]
  disconnect: [ReservationWhereUniqueInput!]
  delete: [ReservationWhereUniqueInput!]
  update: [ReservationUpdateWithWhereUniqueWithoutGuideInput!]
  updateMany: [ReservationUpdateManyWithWhereNestedInput!]
  deleteMany: [ReservationScalarWhereInput!]
  upsert: [ReservationUpsertWithWhereUniqueWithoutGuideInput!]
}

input ReservationUpdateManyWithWhereNestedInput {
  where: ReservationScalarWhereInput!
  data: ReservationUpdateManyDataInput!
}

input ReservationUpdateWithoutDayDataInput {
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  guide: UserUpdateOneRequiredWithoutReservationsInput
}

input ReservationUpdateWithoutGuideDataInput {
  time: Time
  guideID: ID
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  day: DayUpdateOneRequiredWithoutReservationInput
}

input ReservationUpdateWithWhereUniqueWithoutDayInput {
  where: ReservationWhereUniqueInput!
  data: ReservationUpdateWithoutDayDataInput!
}

input ReservationUpdateWithWhereUniqueWithoutGuideInput {
  where: ReservationWhereUniqueInput!
  data: ReservationUpdateWithoutGuideDataInput!
}

input ReservationUpsertWithWhereUniqueWithoutDayInput {
  where: ReservationWhereUniqueInput!
  update: ReservationUpdateWithoutDayDataInput!
  create: ReservationCreateWithoutDayInput!
}

input ReservationUpsertWithWhereUniqueWithoutGuideInput {
  where: ReservationWhereUniqueInput!
  update: ReservationUpdateWithoutGuideDataInput!
  create: ReservationCreateWithoutGuideInput!
}

input ReservationWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  time: Time

  """All values that are not equal to given value."""
  time_not: Time

  """All values that are contained in given list."""
  time_in: [Time!]

  """All values that are not contained in given list."""
  time_not_in: [Time!]
  guideID: ID

  """All values that are not equal to given value."""
  guideID_not: ID

  """All values that are contained in given list."""
  guideID_in: [ID!]

  """All values that are not contained in given list."""
  guideID_not_in: [ID!]

  """All values less than the given value."""
  guideID_lt: ID

  """All values less than or equal the given value."""
  guideID_lte: ID

  """All values greater than the given value."""
  guideID_gt: ID

  """All values greater than or equal the given value."""
  guideID_gte: ID

  """All values containing the given string."""
  guideID_contains: ID

  """All values not containing the given string."""
  guideID_not_contains: ID

  """All values starting with the given string."""
  guideID_starts_with: ID

  """All values not starting with the given string."""
  guideID_not_starts_with: ID

  """All values ending with the given string."""
  guideID_ends_with: ID

  """All values not ending with the given string."""
  guideID_not_ends_with: ID
  userName: String

  """All values that are not equal to given value."""
  userName_not: String

  """All values that are contained in given list."""
  userName_in: [String!]

  """All values that are not contained in given list."""
  userName_not_in: [String!]

  """All values less than the given value."""
  userName_lt: String

  """All values less than or equal the given value."""
  userName_lte: String

  """All values greater than the given value."""
  userName_gt: String

  """All values greater than or equal the given value."""
  userName_gte: String

  """All values containing the given string."""
  userName_contains: String

  """All values not containing the given string."""
  userName_not_contains: String

  """All values starting with the given string."""
  userName_starts_with: String

  """All values not starting with the given string."""
  userName_not_starts_with: String

  """All values ending with the given string."""
  userName_ends_with: String

  """All values not ending with the given string."""
  userName_not_ends_with: String
  userEmail: String

  """All values that are not equal to given value."""
  userEmail_not: String

  """All values that are contained in given list."""
  userEmail_in: [String!]

  """All values that are not contained in given list."""
  userEmail_not_in: [String!]

  """All values less than the given value."""
  userEmail_lt: String

  """All values less than or equal the given value."""
  userEmail_lte: String

  """All values greater than the given value."""
  userEmail_gt: String

  """All values greater than or equal the given value."""
  userEmail_gte: String

  """All values containing the given string."""
  userEmail_contains: String

  """All values not containing the given string."""
  userEmail_not_contains: String

  """All values starting with the given string."""
  userEmail_starts_with: String

  """All values not starting with the given string."""
  userEmail_not_starts_with: String

  """All values ending with the given string."""
  userEmail_ends_with: String

  """All values not ending with the given string."""
  userEmail_not_ends_with: String
  nrOfPeople: String

  """All values that are not equal to given value."""
  nrOfPeople_not: String

  """All values that are contained in given list."""
  nrOfPeople_in: [String!]

  """All values that are not contained in given list."""
  nrOfPeople_not_in: [String!]

  """All values less than the given value."""
  nrOfPeople_lt: String

  """All values less than or equal the given value."""
  nrOfPeople_lte: String

  """All values greater than the given value."""
  nrOfPeople_gt: String

  """All values greater than or equal the given value."""
  nrOfPeople_gte: String

  """All values containing the given string."""
  nrOfPeople_contains: String

  """All values not containing the given string."""
  nrOfPeople_not_contains: String

  """All values starting with the given string."""
  nrOfPeople_starts_with: String

  """All values not starting with the given string."""
  nrOfPeople_not_starts_with: String

  """All values ending with the given string."""
  nrOfPeople_ends_with: String

  """All values not ending with the given string."""
  nrOfPeople_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  guide: UserWhereInput
  day: DayWhereInput
}

input ReservationWhereUniqueInput {
  id: ID
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  day(where: DaySubscriptionWhereInput): DaySubscriptionPayload
  reservation(where: ReservationSubscriptionWhereInput): ReservationSubscriptionPayload
}

enum Time {
  AM
  PM
  DAY
}

type User implements Node {
  id: ID!
  password: String!
  email: String!
  name: String!
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission!
  reservations(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  password: String!
  email: String!
  name: String!
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission!
  reservations: ReservationCreateManyWithoutGuideInput
}

input UserCreateOneWithoutReservationsInput {
  create: UserCreateWithoutReservationsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutReservationsInput {
  id: ID
  password: String!
  email: String!
  name: String!
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission!
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  password_ASC
  password_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  surname_ASC
  surname_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  description_ASC
  description_DESC
  photo_ASC
  photo_DESC
  permissions_ASC
  permissions_DESC
}

type UserPreviousValues {
  id: ID!
  password: String!
  email: String!
  name: String!
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission
  reservations: ReservationUpdateManyWithoutGuideInput
}

input UserUpdateManyMutationInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission
}

input UserUpdateOneRequiredWithoutReservationsInput {
  create: UserCreateWithoutReservationsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutReservationsDataInput
  upsert: UserUpsertWithoutReservationsInput
}

input UserUpdateWithoutReservationsDataInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  permissions: Permission
}

input UserUpsertWithoutReservationsInput {
  update: UserUpdateWithoutReservationsDataInput!
  create: UserCreateWithoutReservationsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  surname: String

  """All values that are not equal to given value."""
  surname_not: String

  """All values that are contained in given list."""
  surname_in: [String!]

  """All values that are not contained in given list."""
  surname_not_in: [String!]

  """All values less than the given value."""
  surname_lt: String

  """All values less than or equal the given value."""
  surname_lte: String

  """All values greater than the given value."""
  surname_gt: String

  """All values greater than or equal the given value."""
  surname_gte: String

  """All values containing the given string."""
  surname_contains: String

  """All values not containing the given string."""
  surname_not_contains: String

  """All values starting with the given string."""
  surname_starts_with: String

  """All values not starting with the given string."""
  surname_not_starts_with: String

  """All values ending with the given string."""
  surname_ends_with: String

  """All values not ending with the given string."""
  surname_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  photo: String

  """All values that are not equal to given value."""
  photo_not: String

  """All values that are contained in given list."""
  photo_in: [String!]

  """All values that are not contained in given list."""
  photo_not_in: [String!]

  """All values less than the given value."""
  photo_lt: String

  """All values less than or equal the given value."""
  photo_lte: String

  """All values greater than the given value."""
  photo_gt: String

  """All values greater than or equal the given value."""
  photo_gte: String

  """All values containing the given string."""
  photo_contains: String

  """All values not containing the given string."""
  photo_not_contains: String

  """All values starting with the given string."""
  photo_starts_with: String

  """All values not starting with the given string."""
  photo_not_starts_with: String

  """All values ending with the given string."""
  photo_ends_with: String

  """All values not ending with the given string."""
  photo_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  reservations_every: ReservationWhereInput
  reservations_some: ReservationWhereInput
  reservations_none: ReservationWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
