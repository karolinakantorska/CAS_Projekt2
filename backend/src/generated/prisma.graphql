# source: https://eu1.prisma.sh/karolina-kantorska/MTBreservation/dev
# timestamp: Wed May 12 2021 22:26:08 GMT+0200 (Central European Summer Time)

type AggregateDay {
  count: Int!
}

type AggregateInfo {
  count: Int!
}

type AggregateReservation {
  count: Int!
}

type AggregateTrip {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Day implements Node {
  id: ID!
  year: String!
  month: String!
  day: String!
  timeStamp: Int
  reservations(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation!]
}

"""A connection to a list of items."""
type DayConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DayEdge]!
  aggregate: AggregateDay!
}

input DayCreateInput {
  id: ID
  year: String!
  month: String!
  day: String!
  timeStamp: Int
  reservations: ReservationCreateManyWithoutRelatedDayInput
}

input DayCreateOneWithoutReservationsInput {
  create: DayCreateWithoutReservationsInput
  connect: DayWhereUniqueInput
}

input DayCreateWithoutReservationsInput {
  id: ID
  year: String!
  month: String!
  day: String!
  timeStamp: Int
}

"""An edge in a connection."""
type DayEdge {
  """The item at the end of the edge."""
  node: Day!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DayOrderByInput {
  id_ASC
  id_DESC
  year_ASC
  year_DESC
  month_ASC
  month_DESC
  day_ASC
  day_DESC
  timeStamp_ASC
  timeStamp_DESC
}

type DayPreviousValues {
  id: ID!
  year: String!
  month: String!
  day: String!
  timeStamp: Int
}

type DaySubscriptionPayload {
  mutation: MutationType!
  node: Day
  updatedFields: [String!]
  previousValues: DayPreviousValues
}

input DaySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DaySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DaySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DaySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DayWhereInput
}

input DayUpdateInput {
  year: String
  month: String
  day: String
  timeStamp: Int
  reservations: ReservationUpdateManyWithoutRelatedDayInput
}

input DayUpdateManyMutationInput {
  year: String
  month: String
  day: String
  timeStamp: Int
}

input DayUpdateOneWithoutReservationsInput {
  create: DayCreateWithoutReservationsInput
  connect: DayWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DayUpdateWithoutReservationsDataInput
  upsert: DayUpsertWithoutReservationsInput
}

input DayUpdateWithoutReservationsDataInput {
  year: String
  month: String
  day: String
  timeStamp: Int
}

input DayUpsertWithoutReservationsInput {
  update: DayUpdateWithoutReservationsDataInput!
  create: DayCreateWithoutReservationsInput!
}

input DayWhereInput {
  """Logical AND on all given filters."""
  AND: [DayWhereInput!]

  """Logical OR on all given filters."""
  OR: [DayWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DayWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  year: String

  """All values that are not equal to given value."""
  year_not: String

  """All values that are contained in given list."""
  year_in: [String!]

  """All values that are not contained in given list."""
  year_not_in: [String!]

  """All values less than the given value."""
  year_lt: String

  """All values less than or equal the given value."""
  year_lte: String

  """All values greater than the given value."""
  year_gt: String

  """All values greater than or equal the given value."""
  year_gte: String

  """All values containing the given string."""
  year_contains: String

  """All values not containing the given string."""
  year_not_contains: String

  """All values starting with the given string."""
  year_starts_with: String

  """All values not starting with the given string."""
  year_not_starts_with: String

  """All values ending with the given string."""
  year_ends_with: String

  """All values not ending with the given string."""
  year_not_ends_with: String
  month: String

  """All values that are not equal to given value."""
  month_not: String

  """All values that are contained in given list."""
  month_in: [String!]

  """All values that are not contained in given list."""
  month_not_in: [String!]

  """All values less than the given value."""
  month_lt: String

  """All values less than or equal the given value."""
  month_lte: String

  """All values greater than the given value."""
  month_gt: String

  """All values greater than or equal the given value."""
  month_gte: String

  """All values containing the given string."""
  month_contains: String

  """All values not containing the given string."""
  month_not_contains: String

  """All values starting with the given string."""
  month_starts_with: String

  """All values not starting with the given string."""
  month_not_starts_with: String

  """All values ending with the given string."""
  month_ends_with: String

  """All values not ending with the given string."""
  month_not_ends_with: String
  day: String

  """All values that are not equal to given value."""
  day_not: String

  """All values that are contained in given list."""
  day_in: [String!]

  """All values that are not contained in given list."""
  day_not_in: [String!]

  """All values less than the given value."""
  day_lt: String

  """All values less than or equal the given value."""
  day_lte: String

  """All values greater than the given value."""
  day_gt: String

  """All values greater than or equal the given value."""
  day_gte: String

  """All values containing the given string."""
  day_contains: String

  """All values not containing the given string."""
  day_not_contains: String

  """All values starting with the given string."""
  day_starts_with: String

  """All values not starting with the given string."""
  day_not_starts_with: String

  """All values ending with the given string."""
  day_ends_with: String

  """All values not ending with the given string."""
  day_not_ends_with: String
  timeStamp: Int

  """All values that are not equal to given value."""
  timeStamp_not: Int

  """All values that are contained in given list."""
  timeStamp_in: [Int!]

  """All values that are not contained in given list."""
  timeStamp_not_in: [Int!]

  """All values less than the given value."""
  timeStamp_lt: Int

  """All values less than or equal the given value."""
  timeStamp_lte: Int

  """All values greater than the given value."""
  timeStamp_gt: Int

  """All values greater than or equal the given value."""
  timeStamp_gte: Int
  reservations_every: ReservationWhereInput
  reservations_some: ReservationWhereInput
  reservations_none: ReservationWhereInput
}

input DayWhereUniqueInput {
  id: ID
}

enum Difficulty {
  S0
  S1
  S2
  S3
  S4
  S5
}

type Info implements Node {
  id: ID!
  text: String
}

"""A connection to a list of items."""
type InfoConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [InfoEdge]!
  aggregate: AggregateInfo!
}

input InfoCreateInput {
  id: ID
  text: String
}

"""An edge in a connection."""
type InfoEdge {
  """The item at the end of the edge."""
  node: Info!

  """A cursor for use in pagination."""
  cursor: String!
}

enum InfoOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
}

type InfoPreviousValues {
  id: ID!
  text: String
}

type InfoSubscriptionPayload {
  mutation: MutationType!
  node: Info
  updatedFields: [String!]
  previousValues: InfoPreviousValues
}

input InfoSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [InfoSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [InfoSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InfoSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: InfoWhereInput
}

input InfoUpdateInput {
  text: String
}

input InfoUpdateManyMutationInput {
  text: String
}

input InfoWhereInput {
  """Logical AND on all given filters."""
  AND: [InfoWhereInput!]

  """Logical OR on all given filters."""
  OR: [InfoWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [InfoWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

input InfoWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createDay(data: DayCreateInput!): Day!
  createReservation(data: ReservationCreateInput!): Reservation!
  createInfo(data: InfoCreateInput!): Info!
  createUser(data: UserCreateInput!): User!
  createTrip(data: TripCreateInput!): Trip!
  updateDay(data: DayUpdateInput!, where: DayWhereUniqueInput!): Day
  updateReservation(data: ReservationUpdateInput!, where: ReservationWhereUniqueInput!): Reservation
  updateInfo(data: InfoUpdateInput!, where: InfoWhereUniqueInput!): Info
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateTrip(data: TripUpdateInput!, where: TripWhereUniqueInput!): Trip
  deleteDay(where: DayWhereUniqueInput!): Day
  deleteReservation(where: ReservationWhereUniqueInput!): Reservation
  deleteInfo(where: InfoWhereUniqueInput!): Info
  deleteUser(where: UserWhereUniqueInput!): User
  deleteTrip(where: TripWhereUniqueInput!): Trip
  upsertDay(where: DayWhereUniqueInput!, create: DayCreateInput!, update: DayUpdateInput!): Day!
  upsertReservation(where: ReservationWhereUniqueInput!, create: ReservationCreateInput!, update: ReservationUpdateInput!): Reservation!
  upsertInfo(where: InfoWhereUniqueInput!, create: InfoCreateInput!, update: InfoUpdateInput!): Info!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertTrip(where: TripWhereUniqueInput!, create: TripCreateInput!, update: TripUpdateInput!): Trip!
  updateManyDays(data: DayUpdateManyMutationInput!, where: DayWhereInput): BatchPayload!
  updateManyReservations(data: ReservationUpdateManyMutationInput!, where: ReservationWhereInput): BatchPayload!
  updateManyInfoes(data: InfoUpdateManyMutationInput!, where: InfoWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyTrips(data: TripUpdateManyMutationInput!, where: TripWhereInput): BatchPayload!
  deleteManyDays(where: DayWhereInput): BatchPayload!
  deleteManyReservations(where: ReservationWhereInput): BatchPayload!
  deleteManyInfoes(where: InfoWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyTrips(where: TripWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  GUIDE
  USER
}

type Query {
  days(where: DayWhereInput, orderBy: DayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Day]!
  reservations(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation]!
  infoes(where: InfoWhereInput, orderBy: InfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Info]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  trips(where: TripWhereInput, orderBy: TripOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Trip]!
  day(where: DayWhereUniqueInput!): Day
  reservation(where: ReservationWhereUniqueInput!): Reservation
  info(where: InfoWhereUniqueInput!): Info
  user(where: UserWhereUniqueInput!): User
  trip(where: TripWhereUniqueInput!): Trip
  daysConnection(where: DayWhereInput, orderBy: DayOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DayConnection!
  reservationsConnection(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReservationConnection!
  infoesConnection(where: InfoWhereInput, orderBy: InfoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InfoConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  tripsConnection(where: TripWhereInput, orderBy: TripOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TripConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Reservation implements Node {
  id: ID!
  time: Time
  guide: User
  relatedDay: Day
  trip: Trip
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
}

"""A connection to a list of items."""
type ReservationConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReservationEdge]!
  aggregate: AggregateReservation!
}

input ReservationCreateInput {
  id: ID
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  guide: UserCreateOneWithoutReservationsInput
  relatedDay: DayCreateOneWithoutReservationsInput
  trip: TripCreateOneInput
}

input ReservationCreateManyWithoutGuideInput {
  create: [ReservationCreateWithoutGuideInput!]
  connect: [ReservationWhereUniqueInput!]
}

input ReservationCreateManyWithoutRelatedDayInput {
  create: [ReservationCreateWithoutRelatedDayInput!]
  connect: [ReservationWhereUniqueInput!]
}

input ReservationCreateWithoutGuideInput {
  id: ID
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  relatedDay: DayCreateOneWithoutReservationsInput
  trip: TripCreateOneInput
}

input ReservationCreateWithoutRelatedDayInput {
  id: ID
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  guide: UserCreateOneWithoutReservationsInput
  trip: TripCreateOneInput
}

"""An edge in a connection."""
type ReservationEdge {
  """The item at the end of the edge."""
  node: Reservation!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReservationOrderByInput {
  id_ASC
  id_DESC
  time_ASC
  time_DESC
  userName_ASC
  userName_DESC
  userEmail_ASC
  userEmail_DESC
  nrOfPeople_ASC
  nrOfPeople_DESC
  description_ASC
  description_DESC
  holiday_ASC
  holiday_DESC
  confirmed_ASC
  confirmed_DESC
  gastId_ASC
  gastId_DESC
  timeStamp_ASC
  timeStamp_DESC
}

type ReservationPreviousValues {
  id: ID!
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
}

input ReservationScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  time: Time

  """All values that are not equal to given value."""
  time_not: Time

  """All values that are contained in given list."""
  time_in: [Time!]

  """All values that are not contained in given list."""
  time_not_in: [Time!]
  userName: String

  """All values that are not equal to given value."""
  userName_not: String

  """All values that are contained in given list."""
  userName_in: [String!]

  """All values that are not contained in given list."""
  userName_not_in: [String!]

  """All values less than the given value."""
  userName_lt: String

  """All values less than or equal the given value."""
  userName_lte: String

  """All values greater than the given value."""
  userName_gt: String

  """All values greater than or equal the given value."""
  userName_gte: String

  """All values containing the given string."""
  userName_contains: String

  """All values not containing the given string."""
  userName_not_contains: String

  """All values starting with the given string."""
  userName_starts_with: String

  """All values not starting with the given string."""
  userName_not_starts_with: String

  """All values ending with the given string."""
  userName_ends_with: String

  """All values not ending with the given string."""
  userName_not_ends_with: String
  userEmail: String

  """All values that are not equal to given value."""
  userEmail_not: String

  """All values that are contained in given list."""
  userEmail_in: [String!]

  """All values that are not contained in given list."""
  userEmail_not_in: [String!]

  """All values less than the given value."""
  userEmail_lt: String

  """All values less than or equal the given value."""
  userEmail_lte: String

  """All values greater than the given value."""
  userEmail_gt: String

  """All values greater than or equal the given value."""
  userEmail_gte: String

  """All values containing the given string."""
  userEmail_contains: String

  """All values not containing the given string."""
  userEmail_not_contains: String

  """All values starting with the given string."""
  userEmail_starts_with: String

  """All values not starting with the given string."""
  userEmail_not_starts_with: String

  """All values ending with the given string."""
  userEmail_ends_with: String

  """All values not ending with the given string."""
  userEmail_not_ends_with: String
  nrOfPeople: String

  """All values that are not equal to given value."""
  nrOfPeople_not: String

  """All values that are contained in given list."""
  nrOfPeople_in: [String!]

  """All values that are not contained in given list."""
  nrOfPeople_not_in: [String!]

  """All values less than the given value."""
  nrOfPeople_lt: String

  """All values less than or equal the given value."""
  nrOfPeople_lte: String

  """All values greater than the given value."""
  nrOfPeople_gt: String

  """All values greater than or equal the given value."""
  nrOfPeople_gte: String

  """All values containing the given string."""
  nrOfPeople_contains: String

  """All values not containing the given string."""
  nrOfPeople_not_contains: String

  """All values starting with the given string."""
  nrOfPeople_starts_with: String

  """All values not starting with the given string."""
  nrOfPeople_not_starts_with: String

  """All values ending with the given string."""
  nrOfPeople_ends_with: String

  """All values not ending with the given string."""
  nrOfPeople_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  holiday: Boolean

  """All values that are not equal to given value."""
  holiday_not: Boolean
  confirmed: Boolean

  """All values that are not equal to given value."""
  confirmed_not: Boolean
  gastId: ID

  """All values that are not equal to given value."""
  gastId_not: ID

  """All values that are contained in given list."""
  gastId_in: [ID!]

  """All values that are not contained in given list."""
  gastId_not_in: [ID!]

  """All values less than the given value."""
  gastId_lt: ID

  """All values less than or equal the given value."""
  gastId_lte: ID

  """All values greater than the given value."""
  gastId_gt: ID

  """All values greater than or equal the given value."""
  gastId_gte: ID

  """All values containing the given string."""
  gastId_contains: ID

  """All values not containing the given string."""
  gastId_not_contains: ID

  """All values starting with the given string."""
  gastId_starts_with: ID

  """All values not starting with the given string."""
  gastId_not_starts_with: ID

  """All values ending with the given string."""
  gastId_ends_with: ID

  """All values not ending with the given string."""
  gastId_not_ends_with: ID
  timeStamp: Int

  """All values that are not equal to given value."""
  timeStamp_not: Int

  """All values that are contained in given list."""
  timeStamp_in: [Int!]

  """All values that are not contained in given list."""
  timeStamp_not_in: [Int!]

  """All values less than the given value."""
  timeStamp_lt: Int

  """All values less than or equal the given value."""
  timeStamp_lte: Int

  """All values greater than the given value."""
  timeStamp_gt: Int

  """All values greater than or equal the given value."""
  timeStamp_gte: Int
}

type ReservationSubscriptionPayload {
  mutation: MutationType!
  node: Reservation
  updatedFields: [String!]
  previousValues: ReservationPreviousValues
}

input ReservationSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReservationWhereInput
}

input ReservationUpdateInput {
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  guide: UserUpdateOneWithoutReservationsInput
  relatedDay: DayUpdateOneWithoutReservationsInput
  trip: TripUpdateOneInput
}

input ReservationUpdateManyDataInput {
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
}

input ReservationUpdateManyMutationInput {
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
}

input ReservationUpdateManyWithoutGuideInput {
  create: [ReservationCreateWithoutGuideInput!]
  connect: [ReservationWhereUniqueInput!]
  set: [ReservationWhereUniqueInput!]
  disconnect: [ReservationWhereUniqueInput!]
  delete: [ReservationWhereUniqueInput!]
  update: [ReservationUpdateWithWhereUniqueWithoutGuideInput!]
  updateMany: [ReservationUpdateManyWithWhereNestedInput!]
  deleteMany: [ReservationScalarWhereInput!]
  upsert: [ReservationUpsertWithWhereUniqueWithoutGuideInput!]
}

input ReservationUpdateManyWithoutRelatedDayInput {
  create: [ReservationCreateWithoutRelatedDayInput!]
  connect: [ReservationWhereUniqueInput!]
  set: [ReservationWhereUniqueInput!]
  disconnect: [ReservationWhereUniqueInput!]
  delete: [ReservationWhereUniqueInput!]
  update: [ReservationUpdateWithWhereUniqueWithoutRelatedDayInput!]
  updateMany: [ReservationUpdateManyWithWhereNestedInput!]
  deleteMany: [ReservationScalarWhereInput!]
  upsert: [ReservationUpsertWithWhereUniqueWithoutRelatedDayInput!]
}

input ReservationUpdateManyWithWhereNestedInput {
  where: ReservationScalarWhereInput!
  data: ReservationUpdateManyDataInput!
}

input ReservationUpdateWithoutGuideDataInput {
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  relatedDay: DayUpdateOneWithoutReservationsInput
  trip: TripUpdateOneInput
}

input ReservationUpdateWithoutRelatedDayDataInput {
  time: Time
  userName: String
  userEmail: String
  nrOfPeople: String
  description: String
  holiday: Boolean
  confirmed: Boolean
  gastId: ID
  timeStamp: Int
  guide: UserUpdateOneWithoutReservationsInput
  trip: TripUpdateOneInput
}

input ReservationUpdateWithWhereUniqueWithoutGuideInput {
  where: ReservationWhereUniqueInput!
  data: ReservationUpdateWithoutGuideDataInput!
}

input ReservationUpdateWithWhereUniqueWithoutRelatedDayInput {
  where: ReservationWhereUniqueInput!
  data: ReservationUpdateWithoutRelatedDayDataInput!
}

input ReservationUpsertWithWhereUniqueWithoutGuideInput {
  where: ReservationWhereUniqueInput!
  update: ReservationUpdateWithoutGuideDataInput!
  create: ReservationCreateWithoutGuideInput!
}

input ReservationUpsertWithWhereUniqueWithoutRelatedDayInput {
  where: ReservationWhereUniqueInput!
  update: ReservationUpdateWithoutRelatedDayDataInput!
  create: ReservationCreateWithoutRelatedDayInput!
}

input ReservationWhereInput {
  """Logical AND on all given filters."""
  AND: [ReservationWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReservationWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReservationWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  time: Time

  """All values that are not equal to given value."""
  time_not: Time

  """All values that are contained in given list."""
  time_in: [Time!]

  """All values that are not contained in given list."""
  time_not_in: [Time!]
  userName: String

  """All values that are not equal to given value."""
  userName_not: String

  """All values that are contained in given list."""
  userName_in: [String!]

  """All values that are not contained in given list."""
  userName_not_in: [String!]

  """All values less than the given value."""
  userName_lt: String

  """All values less than or equal the given value."""
  userName_lte: String

  """All values greater than the given value."""
  userName_gt: String

  """All values greater than or equal the given value."""
  userName_gte: String

  """All values containing the given string."""
  userName_contains: String

  """All values not containing the given string."""
  userName_not_contains: String

  """All values starting with the given string."""
  userName_starts_with: String

  """All values not starting with the given string."""
  userName_not_starts_with: String

  """All values ending with the given string."""
  userName_ends_with: String

  """All values not ending with the given string."""
  userName_not_ends_with: String
  userEmail: String

  """All values that are not equal to given value."""
  userEmail_not: String

  """All values that are contained in given list."""
  userEmail_in: [String!]

  """All values that are not contained in given list."""
  userEmail_not_in: [String!]

  """All values less than the given value."""
  userEmail_lt: String

  """All values less than or equal the given value."""
  userEmail_lte: String

  """All values greater than the given value."""
  userEmail_gt: String

  """All values greater than or equal the given value."""
  userEmail_gte: String

  """All values containing the given string."""
  userEmail_contains: String

  """All values not containing the given string."""
  userEmail_not_contains: String

  """All values starting with the given string."""
  userEmail_starts_with: String

  """All values not starting with the given string."""
  userEmail_not_starts_with: String

  """All values ending with the given string."""
  userEmail_ends_with: String

  """All values not ending with the given string."""
  userEmail_not_ends_with: String
  nrOfPeople: String

  """All values that are not equal to given value."""
  nrOfPeople_not: String

  """All values that are contained in given list."""
  nrOfPeople_in: [String!]

  """All values that are not contained in given list."""
  nrOfPeople_not_in: [String!]

  """All values less than the given value."""
  nrOfPeople_lt: String

  """All values less than or equal the given value."""
  nrOfPeople_lte: String

  """All values greater than the given value."""
  nrOfPeople_gt: String

  """All values greater than or equal the given value."""
  nrOfPeople_gte: String

  """All values containing the given string."""
  nrOfPeople_contains: String

  """All values not containing the given string."""
  nrOfPeople_not_contains: String

  """All values starting with the given string."""
  nrOfPeople_starts_with: String

  """All values not starting with the given string."""
  nrOfPeople_not_starts_with: String

  """All values ending with the given string."""
  nrOfPeople_ends_with: String

  """All values not ending with the given string."""
  nrOfPeople_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  holiday: Boolean

  """All values that are not equal to given value."""
  holiday_not: Boolean
  confirmed: Boolean

  """All values that are not equal to given value."""
  confirmed_not: Boolean
  gastId: ID

  """All values that are not equal to given value."""
  gastId_not: ID

  """All values that are contained in given list."""
  gastId_in: [ID!]

  """All values that are not contained in given list."""
  gastId_not_in: [ID!]

  """All values less than the given value."""
  gastId_lt: ID

  """All values less than or equal the given value."""
  gastId_lte: ID

  """All values greater than the given value."""
  gastId_gt: ID

  """All values greater than or equal the given value."""
  gastId_gte: ID

  """All values containing the given string."""
  gastId_contains: ID

  """All values not containing the given string."""
  gastId_not_contains: ID

  """All values starting with the given string."""
  gastId_starts_with: ID

  """All values not starting with the given string."""
  gastId_not_starts_with: ID

  """All values ending with the given string."""
  gastId_ends_with: ID

  """All values not ending with the given string."""
  gastId_not_ends_with: ID
  timeStamp: Int

  """All values that are not equal to given value."""
  timeStamp_not: Int

  """All values that are contained in given list."""
  timeStamp_in: [Int!]

  """All values that are not contained in given list."""
  timeStamp_not_in: [Int!]

  """All values less than the given value."""
  timeStamp_lt: Int

  """All values less than or equal the given value."""
  timeStamp_lte: Int

  """All values greater than the given value."""
  timeStamp_gt: Int

  """All values greater than or equal the given value."""
  timeStamp_gte: Int
  guide: UserWhereInput
  relatedDay: DayWhereInput
  trip: TripWhereInput
}

input ReservationWhereUniqueInput {
  id: ID
}

enum Specialisation {
  Trail_Riding
  Singletrack
  Bikepark
  Downhill
  Cross_Country
  All_Mountain
  Enduro
  Dirt_Jumping
  Freeride
  MTB_Touring
  Fatbiking
  Ebikes
}

type Subscription {
  day(where: DaySubscriptionWhereInput): DaySubscriptionPayload
  reservation(where: ReservationSubscriptionWhereInput): ReservationSubscriptionPayload
  info(where: InfoSubscriptionWhereInput): InfoSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  trip(where: TripSubscriptionWhereInput): TripSubscriptionPayload
}

enum Time {
  AM
  PM
  DAY
}

type Trip implements Node {
  id: ID!
  guide: User
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
}

"""A connection to a list of items."""
type TripConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TripEdge]!
  aggregate: AggregateTrip!
}

input TripCreateInput {
  id: ID
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
  guide: UserCreateOneInput
}

input TripCreateOneInput {
  create: TripCreateInput
  connect: TripWhereUniqueInput
}

"""An edge in a connection."""
type TripEdge {
  """The item at the end of the edge."""
  node: Trip!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TripOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  special_ASC
  special_DESC
  description_ASC
  description_DESC
  difficulty_ASC
  difficulty_DESC
  start_ASC
  start_DESC
  end_ASC
  end_DESC
  duration_ASC
  duration_DESC
  costs_ASC
  costs_DESC
  ebikes_ASC
  ebikes_DESC
  photo_ASC
  photo_DESC
  wholeDay_ASC
  wholeDay_DESC
}

type TripPreviousValues {
  id: ID!
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
}

type TripSubscriptionPayload {
  mutation: MutationType!
  node: Trip
  updatedFields: [String!]
  previousValues: TripPreviousValues
}

input TripSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TripSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TripSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TripSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TripWhereInput
}

input TripUpdateDataInput {
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
  guide: UserUpdateOneInput
}

input TripUpdateInput {
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
  guide: UserUpdateOneInput
}

input TripUpdateManyMutationInput {
  title: String
  special: String
  description: String
  difficulty: Difficulty
  start: String
  end: String
  duration: String
  costs: String
  ebikes: Boolean
  photo: String
  wholeDay: Boolean
}

input TripUpdateOneInput {
  create: TripCreateInput
  connect: TripWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TripUpdateDataInput
  upsert: TripUpsertNestedInput
}

input TripUpsertNestedInput {
  update: TripUpdateDataInput!
  create: TripCreateInput!
}

input TripWhereInput {
  """Logical AND on all given filters."""
  AND: [TripWhereInput!]

  """Logical OR on all given filters."""
  OR: [TripWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TripWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  special: String

  """All values that are not equal to given value."""
  special_not: String

  """All values that are contained in given list."""
  special_in: [String!]

  """All values that are not contained in given list."""
  special_not_in: [String!]

  """All values less than the given value."""
  special_lt: String

  """All values less than or equal the given value."""
  special_lte: String

  """All values greater than the given value."""
  special_gt: String

  """All values greater than or equal the given value."""
  special_gte: String

  """All values containing the given string."""
  special_contains: String

  """All values not containing the given string."""
  special_not_contains: String

  """All values starting with the given string."""
  special_starts_with: String

  """All values not starting with the given string."""
  special_not_starts_with: String

  """All values ending with the given string."""
  special_ends_with: String

  """All values not ending with the given string."""
  special_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  difficulty: Difficulty

  """All values that are not equal to given value."""
  difficulty_not: Difficulty

  """All values that are contained in given list."""
  difficulty_in: [Difficulty!]

  """All values that are not contained in given list."""
  difficulty_not_in: [Difficulty!]
  start: String

  """All values that are not equal to given value."""
  start_not: String

  """All values that are contained in given list."""
  start_in: [String!]

  """All values that are not contained in given list."""
  start_not_in: [String!]

  """All values less than the given value."""
  start_lt: String

  """All values less than or equal the given value."""
  start_lte: String

  """All values greater than the given value."""
  start_gt: String

  """All values greater than or equal the given value."""
  start_gte: String

  """All values containing the given string."""
  start_contains: String

  """All values not containing the given string."""
  start_not_contains: String

  """All values starting with the given string."""
  start_starts_with: String

  """All values not starting with the given string."""
  start_not_starts_with: String

  """All values ending with the given string."""
  start_ends_with: String

  """All values not ending with the given string."""
  start_not_ends_with: String
  end: String

  """All values that are not equal to given value."""
  end_not: String

  """All values that are contained in given list."""
  end_in: [String!]

  """All values that are not contained in given list."""
  end_not_in: [String!]

  """All values less than the given value."""
  end_lt: String

  """All values less than or equal the given value."""
  end_lte: String

  """All values greater than the given value."""
  end_gt: String

  """All values greater than or equal the given value."""
  end_gte: String

  """All values containing the given string."""
  end_contains: String

  """All values not containing the given string."""
  end_not_contains: String

  """All values starting with the given string."""
  end_starts_with: String

  """All values not starting with the given string."""
  end_not_starts_with: String

  """All values ending with the given string."""
  end_ends_with: String

  """All values not ending with the given string."""
  end_not_ends_with: String
  duration: String

  """All values that are not equal to given value."""
  duration_not: String

  """All values that are contained in given list."""
  duration_in: [String!]

  """All values that are not contained in given list."""
  duration_not_in: [String!]

  """All values less than the given value."""
  duration_lt: String

  """All values less than or equal the given value."""
  duration_lte: String

  """All values greater than the given value."""
  duration_gt: String

  """All values greater than or equal the given value."""
  duration_gte: String

  """All values containing the given string."""
  duration_contains: String

  """All values not containing the given string."""
  duration_not_contains: String

  """All values starting with the given string."""
  duration_starts_with: String

  """All values not starting with the given string."""
  duration_not_starts_with: String

  """All values ending with the given string."""
  duration_ends_with: String

  """All values not ending with the given string."""
  duration_not_ends_with: String
  costs: String

  """All values that are not equal to given value."""
  costs_not: String

  """All values that are contained in given list."""
  costs_in: [String!]

  """All values that are not contained in given list."""
  costs_not_in: [String!]

  """All values less than the given value."""
  costs_lt: String

  """All values less than or equal the given value."""
  costs_lte: String

  """All values greater than the given value."""
  costs_gt: String

  """All values greater than or equal the given value."""
  costs_gte: String

  """All values containing the given string."""
  costs_contains: String

  """All values not containing the given string."""
  costs_not_contains: String

  """All values starting with the given string."""
  costs_starts_with: String

  """All values not starting with the given string."""
  costs_not_starts_with: String

  """All values ending with the given string."""
  costs_ends_with: String

  """All values not ending with the given string."""
  costs_not_ends_with: String
  ebikes: Boolean

  """All values that are not equal to given value."""
  ebikes_not: Boolean
  photo: String

  """All values that are not equal to given value."""
  photo_not: String

  """All values that are contained in given list."""
  photo_in: [String!]

  """All values that are not contained in given list."""
  photo_not_in: [String!]

  """All values less than the given value."""
  photo_lt: String

  """All values less than or equal the given value."""
  photo_lte: String

  """All values greater than the given value."""
  photo_gt: String

  """All values greater than or equal the given value."""
  photo_gte: String

  """All values containing the given string."""
  photo_contains: String

  """All values not containing the given string."""
  photo_not_contains: String

  """All values starting with the given string."""
  photo_starts_with: String

  """All values not starting with the given string."""
  photo_not_starts_with: String

  """All values ending with the given string."""
  photo_ends_with: String

  """All values not ending with the given string."""
  photo_not_ends_with: String
  wholeDay: Boolean

  """All values that are not equal to given value."""
  wholeDay_not: Boolean
  guide: UserWhereInput
}

input TripWhereUniqueInput {
  id: ID
}

type User implements Node {
  id: ID!
  password: String!
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  specialisations: [Specialisation!]!
  permissions: Permission!
  reservations(where: ReservationWhereInput, orderBy: ReservationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Reservation!]
  location: String
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  password: String!
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission!
  location: String
  specialisations: UserCreatespecialisationsInput
  reservations: ReservationCreateManyWithoutGuideInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReservationsInput {
  create: UserCreateWithoutReservationsInput
  connect: UserWhereUniqueInput
}

input UserCreatespecialisationsInput {
  set: [Specialisation!]
}

input UserCreateWithoutReservationsInput {
  id: ID
  password: String!
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission!
  location: String
  specialisations: UserCreatespecialisationsInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  password_ASC
  password_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  surname_ASC
  surname_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  description_ASC
  description_DESC
  photo_ASC
  photo_DESC
  title_ASC
  title_DESC
  ebike_ASC
  ebike_DESC
  mtb_ASC
  mtb_DESC
  phone_ASC
  phone_DESC
  permissions_ASC
  permissions_DESC
  location_ASC
  location_DESC
}

type UserPreviousValues {
  id: ID!
  password: String!
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  specialisations: [Specialisation!]!
  permissions: Permission!
  location: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission
  location: String
  specialisations: UserUpdatespecialisationsInput
  reservations: ReservationUpdateManyWithoutGuideInput
}

input UserUpdateInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission
  location: String
  specialisations: UserUpdatespecialisationsInput
  reservations: ReservationUpdateManyWithoutGuideInput
}

input UserUpdateManyMutationInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission
  location: String
  specialisations: UserUpdatespecialisationsInput
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneWithoutReservationsInput {
  create: UserCreateWithoutReservationsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutReservationsDataInput
  upsert: UserUpsertWithoutReservationsInput
}

input UserUpdatespecialisationsInput {
  set: [Specialisation!]
}

input UserUpdateWithoutReservationsDataInput {
  password: String
  email: String
  name: String
  surname: String
  resetToken: String
  resetTokenExpiry: Float
  description: String
  photo: String
  title: String
  ebike: Boolean
  mtb: Boolean
  phone: String
  permissions: Permission
  location: String
  specialisations: UserUpdatespecialisationsInput
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutReservationsInput {
  update: UserUpdateWithoutReservationsDataInput!
  create: UserCreateWithoutReservationsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  surname: String

  """All values that are not equal to given value."""
  surname_not: String

  """All values that are contained in given list."""
  surname_in: [String!]

  """All values that are not contained in given list."""
  surname_not_in: [String!]

  """All values less than the given value."""
  surname_lt: String

  """All values less than or equal the given value."""
  surname_lte: String

  """All values greater than the given value."""
  surname_gt: String

  """All values greater than or equal the given value."""
  surname_gte: String

  """All values containing the given string."""
  surname_contains: String

  """All values not containing the given string."""
  surname_not_contains: String

  """All values starting with the given string."""
  surname_starts_with: String

  """All values not starting with the given string."""
  surname_not_starts_with: String

  """All values ending with the given string."""
  surname_ends_with: String

  """All values not ending with the given string."""
  surname_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  photo: String

  """All values that are not equal to given value."""
  photo_not: String

  """All values that are contained in given list."""
  photo_in: [String!]

  """All values that are not contained in given list."""
  photo_not_in: [String!]

  """All values less than the given value."""
  photo_lt: String

  """All values less than or equal the given value."""
  photo_lte: String

  """All values greater than the given value."""
  photo_gt: String

  """All values greater than or equal the given value."""
  photo_gte: String

  """All values containing the given string."""
  photo_contains: String

  """All values not containing the given string."""
  photo_not_contains: String

  """All values starting with the given string."""
  photo_starts_with: String

  """All values not starting with the given string."""
  photo_not_starts_with: String

  """All values ending with the given string."""
  photo_ends_with: String

  """All values not ending with the given string."""
  photo_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  ebike: Boolean

  """All values that are not equal to given value."""
  ebike_not: Boolean
  mtb: Boolean

  """All values that are not equal to given value."""
  mtb_not: Boolean
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  reservations_every: ReservationWhereInput
  reservations_some: ReservationWhereInput
  reservations_none: ReservationWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
